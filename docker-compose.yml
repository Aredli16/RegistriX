version: "3"

services:
  database:
    image: postgres:16.2
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: "pg_isready -U postgres || exit 1"
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - registrix:/var/lib/postgresql/data
      - ./database-init.sql:/docker-entrypoint-initdb.d/init.sql

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    command: start-dev --import-realm
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./registrix-realm.json:/opt/keycloak/data/import/registrix-realm.json
    environment:
      KC_HTTP_PORT: 8000
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: database
      KC_SCHEMA: keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HEALTH_ENABLED: true
    depends_on:
      database:
        condition: service_healthy

  discovery:
    image: ghcr.io/aredli16/discovery:1.0.0-SNAPSHOT
    restart: always
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 10s
      retries: 10
    profiles:
      - dev
      - prod

  gateway:
    image: ghcr.io/aredli16/gateway:1.0.0-SNAPSHOT
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 10s
      retries: 10
    depends_on:
      discovery:
        condition: service_healthy
      registration:
        condition: service_healthy
    profiles:
      - dev
      - prod

  registration:
    image: ghcr.io/aredli16/registration:1.0.0-SNAPSHOT
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: "curl --fail --silent localhost:8081/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 10s
      retries: 10
    depends_on:
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy
    profiles:
      - dev
      - prod

  backoffice:
    image: ghcr.io/aredli16/backoffice:latest
    build:
      context: .
      dockerfile: ./docker/backoffice/Dockerfile
    restart: always
    ports:
      - "3000:3000"
    environment:
      KEYCLOAK_CLIENT_ID: backoffice
      KEYCLOAK_CLIENT_SECRET: GYYZ51JlcqTQ9pmQOKJaY72KqMFhP0Il
      KEYCLOAK_ISSUER: http://keycloak:8000/realms/registrix
      NEXTAUTH_SECRET: 3d2f2b2c-1b1a-4f5a-8b1a-2b1a1b1a1b1a
      NEXTAUTH_URL: http://localhost:3000
      API_URL: http://gateway:8080
    profiles:
      - prod
    depends_on:
      gateway:
        condition: service_healthy

  client:
    image: ghcr.io/aredli16/client:latest
    build:
      context: .
      dockerfile: ./docker/client/Dockerfile
    restart: always
    ports:
      - "3001:3000"
    environment:
      KEYCLOAK_CLIENT_ID: client
      KEYCLOAK_CLIENT_SECRET: WMTcEah9HONlMZMqF5Eojl3X7GZ44R1G
      KEYCLOAK_ISSUER: http://keycloak:8000/realms/registrix
      NEXTAUTH_SECRET: 3d2f2b2c-1b1a-4f5a-8b1a-2b1a1b1a1b1a
      NEXTAUTH_URL: http://localhost:3001
      API_URL: http://gateway:8080
    profiles:
      - prod
    depends_on:
      gateway:
        condition: service_healthy

volumes:
  registrix:
